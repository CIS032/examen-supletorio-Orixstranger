/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package supletorio;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

/**
 *
 * @author OrixStranger
 */
public class Ventanas extends javax.swing.JFrame {

    /**
     * Creates new form Ventanas
     */
    public Ventanas() {
        initComponents();
        llenar();
    }

    Connection conexion = null;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        presentartodo = new javax.swing.JTextArea();
        btn1 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        presentartodo.setColumns(20);
        presentartodo.setRows(5);
        jScrollPane2.setViewportView(presentartodo);

        btn1.setText("Presentar");
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        btn2.setText("jButton6");
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        btn3.setText("jButton7");
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        btn4.setText("jButton8");
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn2)
                            .addComponent(btn1)
                            .addComponent(btn3)
                            .addComponent(btn4))))
                .addContainerGap(418, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(btn1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn4)
                .addContainerGap(86, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        // TODO add your handling code here:
        baseDatos();
        try {
            Statement sentencia = conexion.createStatement();
            ResultSet registros = sentencia.executeQuery("select *from articulo");
            String lista = "";
            while (registros.next()) {
                String clave1 = registros.getString("CLAVE_ART");
                String nombre = registros.getString("NOMBRE");
                String precio = registros.getString("PRECIO");
                String fabricante = registros.getString("CLAVE_FABRICA");
                System.out.printf("%s %-60s %4s %4s %n", clave1, nombre, precio, fabricante);

                lista = lista + clave1 + " - " + nombre + " - " + precio + " - " + fabricante + "\n";
            }
            registros.close();
            conexion.close();
            presentartodo.setText(lista);
        } catch (SQLException sqlex) {
            System.out.println("error" + sqlex);
        }
    }//GEN-LAST:event_btn1ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        // TODO add your handling code here:
        baseDatos();
        try {
            Statement sentencia = conexion.createStatement();
            ResultSet registros = sentencia.executeQuery("select *from articulo where precio>100 and precio <350");
            String lista = "";
            while (registros.next()) {
                String clave1 = registros.getString("CLAVE_ART");
                String nombre = registros.getString("NOMBRE");
                String precio = registros.getString("PRECIO");
                String fabricante = registros.getString("CLAVE_FABRICA");
                System.out.printf("%s %-60s %4s %4s %n", clave1, nombre, precio, fabricante);

                lista = lista + clave1 + " - " + nombre + " - " + precio + " - " + fabricante + "\n";
            }
            registros.close();
            conexion.close();
            presentartodo.setText(lista);
        } catch (SQLException sqlex) {
            System.out.println("error" + sqlex);
        }
    }//GEN-LAST:event_btn2ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        // TODO add your handling code here:
        baseDatos();
        try {
            Statement sentencia = conexion.createStatement();
            ResultSet registros = sentencia.executeQuery("select *from articulo where precio>=450");
            String lista = "";
            while (registros.next()) {
                String clave1 = registros.getString("CLAVE_ART");
                String nombre = registros.getString("NOMBRE");
                int precio = registros.getInt("PRECIO");
                String fabricante = registros.getString("CLAVE_FABRICA");
                System.out.printf("%s %-60s %4s %4s %n", clave1, nombre, precio, fabricante);
                double p = precio - (precio * 0.1);
                lista = lista + clave1 + " - " + nombre + " - " + precio + " - " + "descuento: " + p + "\n";
            }
            registros.close();
            conexion.close();
            presentartodo.setText(lista);
        } catch (SQLException sqlex) {
            System.out.println("error" + sqlex);
        }
    }//GEN-LAST:event_btn3ActionPerformed

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
        // TODO add your handling code here:
        baseDatos();
        String[] list = new String[5];
        int i = 0;
        try {
            Statement sentencia = conexion.createStatement();
            ResultSet registros = sentencia.executeQuery("select *from FABRICANTE ");
            while (registros.next()) {
                list[i] = registros.getString("NOMBRE");
                i++;

            }
            registros.close();
        } catch (SQLException sqlex) {
            System.out.println("error" + sqlex);
        }
        try {
            Statement sentencia = conexion.createStatement();
            ResultSet registros = sentencia.executeQuery("select *from articulo ");
            String lista = "";
            int x = 0;
            while (registros.next()) {
                String clave1 = registros.getString("CLAVE_ART");
                String nombre = registros.getString("NOMBRE");
                int precio = registros.getInt("PRECIO");
                String fabricante = registros.getString("CLAVE_FABRICA");
                String v = "";
                try {
                    Statement sen = conexion.createStatement();
                    String m = "select *from FABRICANTE where CLAVE_FABRICANTE like " + fabricante;
                    ResultSet reg = sen.executeQuery("select *from FABRICANTE where CLAVE_FABRICANTE like '" + fabricante+"%'");
                    while (reg.next()) {
                        v = reg.getString("NOMBRE");
                    }
                    reg.close();
                } catch (SQLException sqlex) {
                    System.out.println("error" + sqlex);
                }

                System.out.println("daasas"+v);

                lista = lista + clave1 + " - " + nombre + " - " + precio + " - "+ fabricante + " - " + v + "\n";
                System.out.println(lista);
                x = 0;
            }
            registros.close();
            conexion.close();
            presentartodo.setText(lista);

        } catch (SQLException sqlex) {
            System.out.println("error" + sqlex);
        }
    }//GEN-LAST:event_btn4ActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventanas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventanas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventanas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventanas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventanas().setVisible(true);
            }
        });
    }
    
    
    public void baseDatos() {

        try {
            Class.forName("org.apache.derby.jdbc.ClientDriver");
            System.out.println("Driver cargado !!!");
        } catch (ClassNotFoundException cnfe) {
            System.out.println("Error al cargar Driver " + cnfe);
        }

        try {
            String urlbd = "jdbc:derby://localhost:1527/tienda";
            conexion = DriverManager.getConnection(urlbd);
            System.out.println("Conexion satisfactoria !!!");
        } catch (SQLException sqlex) {
            System.out.println("Error al establecer conexion a la BD: " + sqlex);
        }
    }

    public void llenar() {
        baseDatos();
        try {
            System.out.println("ddewe");
            Statement sentencia = conexion.createStatement();
            ResultSet registros = sentencia.executeQuery("select * from articulo");
            String sqlInsert = String.format("INSERT INTO articulo VALUES('%s', '%s', '%s', %d)",
                    "1","Teclado","3",100);
            System.out.println(sqlInsert);
            int r = sentencia.executeUpdate(sqlInsert);
            System.out.println(sqlInsert);
            System.out.println("Se ha modificado 1");

            sqlInsert = String.format("INSERT INTO articulo VALUES('%s', '%s', '%s', %d)",
                    "2","Disco duro 300 Gb","5",500);
            r = sentencia.executeUpdate(sqlInsert);

            System.out.println("Se ha modificado");

            sqlInsert = String.format("INSERT INTO articulo VALUES('%s', '%s', '%s', %d)",
                    "3", "Mouse","3",80);
            r = sentencia.executeUpdate(sqlInsert);

            System.out.println("Se ha modificado");

            sqlInsert = String.format("INSERT INTO articulo VALUES('%s', '%s', '%s', %d)",
                    "4","Memoria USB","4",140);
            r = sentencia.executeUpdate(sqlInsert);

            System.out.println("Se ha modificado");

            sqlInsert = String.format("INSERT INTO articulo VALUES('%s', '%s', '%s', %d)",
                    "5","Memoria RAM","1",290);
            r = sentencia.executeUpdate(sqlInsert);

            System.out.println("Se ha modificado");

            sqlInsert = String.format("INSERT INTO articulo VALUES('%s', '%s', '%s', %d)",
                    "6", "Disco duro ext. 250 Gb","65",650);
            r = sentencia.executeUpdate(sqlInsert);

            System.out.println("Se ha modificado");

            sqlInsert = String.format("INSERT INTO articulo VALUES('%s', '%s', '%s', %d)",
                    "7","Memoria USB","1",279);
            r = sentencia.executeUpdate(sqlInsert);

            System.out.println("Se ha modificado");

            sqlInsert = String.format("INSERT INTO articulo VALUES('%s', '%s', '%s', %d)",
                    "8","DVD Rom","2",450);
            r = sentencia.executeUpdate(sqlInsert);

            System.out.println("Se ha modificado");

            sqlInsert = String.format("INSERT INTO articulo VALUES('%s', '%s', '%s', %d)",
                    "9","CD Rom","2",200);
            r = sentencia.executeUpdate(sqlInsert);

            System.out.println("Se ha modificado");

            sqlInsert = String.format("INSERT INTO articulo VALUES('%s', '%s', '%s', %d)",
                    "10","Tarjeta de red","3", 180);
            r = sentencia.executeUpdate(sqlInsert);

            sqlInsert = String.format("INSERT INTO fabricante VALUES('%s', '%s')",
                    "1",
                    "Kingston");
            r = sentencia.executeUpdate(sqlInsert);

            sqlInsert = String.format("INSERT INTO fabricantes VALUES('%s', '%s')",
                    "2",
                    "Adata");
            r = sentencia.executeUpdate(sqlInsert);
            sqlInsert = String.format("INSERT INTO fabricante VALUES('%s', '%s')",
                    "3",
                    "Logitech");
            r = sentencia.executeUpdate(sqlInsert);
            sqlInsert = String.format("INSERT INTO fabricante VALUES('%s', '%s')",
                    "4",
                    "Lexmark");
            r = sentencia.executeUpdate(sqlInsert);
            sqlInsert = String.format("INSERT INTO fabricante VALUES('%s', '%s')",
                    "5",
                    "Seagate");
            r = sentencia.executeUpdate(sqlInsert);

            registros.close();
            conexion.close();

        } catch (SQLException sqlex) {
            System.out.println("error" + sqlex);
        }
    }

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea presentartodo;
    // End of variables declaration//GEN-END:variables
}
